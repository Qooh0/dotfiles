##### 0) 基本 & 互換 #############################################

# prefixをC-tに
set -g prefix C-t
unbind C-b

# 256color + TrueColor（VSCode, Windows Terminal, iTerm2 向け）
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*:Tc"

# VSCode内ターミナルやWindows Terminalでのスクロール履歴を長く
set -g history-limit 100000

# フォーカスイベント（エディタ連携やプロンプト再描画が滑らかに）
set-option -g focus-events on

# pane/ウィンドウ番号
set-option -g base-index 1
setw -g pane-base-index 1
set-option -g renumber-windows on

# マウス操作
set-option -g mouse on
# スクロール時にalternate screenへ奪取させない（あなたの既存方針）
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

##### 1) クリップボード（多OS/ターミナル対応） ####################

# tmux 3.2+ は set-clipboard on でOSC52を発行（VSCode/WT/iTerm2でOKなことが多い）
set -g set-clipboard on

# pbcopy/win32yank/xclip/xsel があれば使う。なければOSC52にフォールバック。
# linux では xsel をインストールする必要あり
# copy-mode-viで Enter = 選択コピー＆抜ける
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel \
  'sh -c "\
    if command -v pbcopy >/dev/null 2>&1; then cat | pbcopy; \
    elif command -v win32yank.exe >/dev/null 2>&1; then cat | win32yank.exe -i --crlf; \
    elif command -v xclip >/dev/null 2>&1; then xclip -selection clipboard -in; \
    elif command -v xsel >/dev/null 2>&1; then xsel -bi; \
    else cat >/dev/null; fi"'

# Vi風コピー動作の統一
set-window-option -g mode-keys vi

##### 2) 分割/移動/サイズ変更/ズーム ###############################

# 分割（あなたの既存記法を踏襲）
bind | split-window -h
bind - split-window -v

# 現在paneをズーム/解除（prefix + z）
bind z resize-pane -Z

# pane移動（prefix + h/j/k/l）: VSCode等でも衝突しにくい
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# paneサイズ変更（prefix + Alt + 矢印 or H/J/K/L）
bind -r -n M-Left  resize-pane -L 5
bind -r -n M-Right resize-pane -R 5
bind -r -n M-Up    resize-pane -U 3
bind -r -n M-Down  resize-pane -D 3
bind -r H resize-pane -L 5
bind -r J resize-pane -D 3
bind -r K resize-pane -U 3
bind -r L resize-pane -R 5

# pane入れ替え（swap）
bind < swap-pane -U
bind > swap-pane -D

# paneの一時表示番号（prefix + q）
bind q display-panes

# 同期入力（複数paneへ同時入力）: prefix + y で切替
bind y set-window-option synchronize-panes \; display-message "synchronize-panes: #{?pane_synchronized,on,off}"

##### 3) ウィンドウ操作 & 作法 ####################################

# 新規ウィンドウを現ディレクトリで開く（prefix + c）
unbind c
bind c new-window -c "#{pane_current_path}"

# 次/前ウィンドウ（prefix + n/p は既存コメント準拠）
bind n next-window
bind p previous-window

# 指定番号ジャンプはデフォルト（prefix + 数字）
# pane移動は prefix + o（既定動作）、必要なら：
bind o select-pane -t :.+
# kill-window/pane の確認プロンプトを出す（事故防止）
bind X confirm-before -p "kill-window #W? (y/n)" kill-window
bind x confirm-before -p "kill-pane #P? (y/n)" kill-pane

##### 4) ステータス/見た目 ########################################

# ステータス配色（淡背景に黒文字）
set -g status-bg "colour255"
set -g status-fg "black"
set -g status-interval 5

# 左: セッション名 / 右: ホスト名 時刻（電池はmacやLinux環境次第で追加可）
set -g status-left  "#[bold] #S "
set -g status-right "#[fg=brightblack]#H #[fg=blue]%Y-%m-%d #[fg=green]%H:%M "

# アクティブ/非アクティブのpane境界強調
set -g pane-border-style "fg=brightblack"
set -g pane-active-border-style "fg=blue"

# メッセージ/コピーモードの見た目
set -g message-style "bg=black,fg=white"
setw -g mode-style "bg=colour236,fg=colour220"

# パワーテーマ（既存設定に合わせて） ※TPMの tmux-power を使うなら有効
set -g @tmux_power_theme 'gold'

##### 5) 品質/パフォーマンス #######################################

# aggressive-resize: エディタのレイアウト崩れを抑える
set -g aggressive-resize on

# 自動リネームは無効（zshやFishのタイトル制御と二重にならないように）
set-option -g allow-rename off
set-window-option -g automatic-rename off

##### 6) リロード/ユーティリティ ###################################

# 設定リロード（prefix + r）
bind r source-file ~/.tmux.conf \; display-message "Reloaded ~/.tmux.conf"

# クリア＆再描画（prefix + Ctrl-l）
bind C-l send-keys C-l \; run-shell "tmux refresh-client -S && tmux clear-history" \; display-message "screen cleared"

##### 7) VSCode/Cursor/Claude/Codex 運用メモ ########################
# - VSCode/Cursor内のターミナルは一部キーが奪われるので、Alt系やprefix経由を採用。
# - TrueColor対応でエディタの色分けを崩さない（上の Tc 設定）。
# - synchronize-panesでテストコマンドを一括投入、splitでログ監視とビルドを並行。
# - SSH多用時は prefix + z でズーム、prefix + q で番号表示→瞬間移動。

##### 8) TPM (tmux plugin manager) を使う場合（任意） ##############
# TPM本体：https://github.com/tmux-plugins/tpm を ~/.tmux/plugins/tpm に
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'wfxr/tmux-power'    # tmux_power_theme と併用（テーマ強化）
# run '~/.tmux/plugins/tpm/tpm'

# GPG
set -ga update-environment "GPG_TTY PINENTRY_USER_DATA"

